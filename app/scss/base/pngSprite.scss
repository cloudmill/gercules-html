// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-logo-name: 'icon-logo';
$icon-logo-x: 1056px;
$icon-logo-y: 0px;
$icon-logo-offset-x: -1056px;
$icon-logo-offset-y: 0px;
$icon-logo-width: 696px;
$icon-logo-height: 692px;
$icon-logo-total-width: 1752px;
$icon-logo-total-height: 992px;
$icon-logo-image: '../images/sprite.png';
$icon-logo: (1056px, 0px, -1056px, 0px, 696px, 692px, 1752px, 992px, '../images/sprite.png', 'icon-logo', );
$icon-loog-full-name: 'icon-loog full';
$icon-loog-full-x: 0px;
$icon-loog-full-y: 0px;
$icon-loog-full-offset-x: 0px;
$icon-loog-full-offset-y: 0px;
$icon-loog-full-width: 1056px;
$icon-loog-full-height: 992px;
$icon-loog-full-total-width: 1752px;
$icon-loog-full-total-height: 992px;
$icon-loog-full-image: '../images/sprite.png';
$icon-loog-full: (0px, 0px, 0px, 0px, 1056px, 992px, 1752px, 992px, '../images/sprite.png', 'icon-loog full', );
$icon-map-panel-mark-green-name: 'icon-map-panel-mark-green';
$icon-map-panel-mark-green-x: 1093px;
$icon-map-panel-mark-green-y: 692px;
$icon-map-panel-mark-green-offset-x: -1093px;
$icon-map-panel-mark-green-offset-y: -692px;
$icon-map-panel-mark-green-width: 29px;
$icon-map-panel-mark-green-height: 28px;
$icon-map-panel-mark-green-total-width: 1752px;
$icon-map-panel-mark-green-total-height: 992px;
$icon-map-panel-mark-green-image: '../images/sprite.png';
$icon-map-panel-mark-green: (1093px, 692px, -1093px, -692px, 29px, 28px, 1752px, 992px, '../images/sprite.png', 'icon-map-panel-mark-green', );
$icon-map-panel-mark-red-name: 'icon-map-panel-mark-red';
$icon-map-panel-mark-red-x: 1122px;
$icon-map-panel-mark-red-y: 692px;
$icon-map-panel-mark-red-offset-x: -1122px;
$icon-map-panel-mark-red-offset-y: -692px;
$icon-map-panel-mark-red-width: 29px;
$icon-map-panel-mark-red-height: 28px;
$icon-map-panel-mark-red-total-width: 1752px;
$icon-map-panel-mark-red-total-height: 992px;
$icon-map-panel-mark-red-image: '../images/sprite.png';
$icon-map-panel-mark-red: (1122px, 692px, -1122px, -692px, 29px, 28px, 1752px, 992px, '../images/sprite.png', 'icon-map-panel-mark-red', );
$icon-map-panel-mark-white-name: 'icon-map-panel-mark-white';
$icon-map-panel-mark-white-x: 1151px;
$icon-map-panel-mark-white-y: 692px;
$icon-map-panel-mark-white-offset-x: -1151px;
$icon-map-panel-mark-white-offset-y: -692px;
$icon-map-panel-mark-white-width: 29px;
$icon-map-panel-mark-white-height: 28px;
$icon-map-panel-mark-white-total-width: 1752px;
$icon-map-panel-mark-white-total-height: 992px;
$icon-map-panel-mark-white-image: '../images/sprite.png';
$icon-map-panel-mark-white: (1151px, 692px, -1151px, -692px, 29px, 28px, 1752px, 992px, '../images/sprite.png', 'icon-map-panel-mark-white', );
$icon-map-pin-with-g-name: 'icon-map-pin-with-g';
$icon-map-pin-with-g-x: 1056px;
$icon-map-pin-with-g-y: 692px;
$icon-map-pin-with-g-offset-x: -1056px;
$icon-map-pin-with-g-offset-y: -692px;
$icon-map-pin-with-g-width: 37px;
$icon-map-pin-with-g-height: 40px;
$icon-map-pin-with-g-total-width: 1752px;
$icon-map-pin-with-g-total-height: 992px;
$icon-map-pin-with-g-image: '../images/sprite.png';
$icon-map-pin-with-g: (1056px, 692px, -1056px, -692px, 37px, 40px, 1752px, 992px, '../images/sprite.png', 'icon-map-pin-with-g', );
$spritesheet-width: 1752px;
$spritesheet-height: 992px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($icon-logo, $icon-loog-full, $icon-map-panel-mark-green, $icon-map-panel-mark-red, $icon-map-panel-mark-white, $icon-map-pin-with-g, );
$spritesheet: (1752px, 992px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
